version: "3.8"

services:
  api:
    build:
      context: ./backend
      dockerfile: dockerfile
    container_name: spring-alacena
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql-alacena:5432/recetas_db
      - SPRING_DATASOURCE_USERNAME=alacena
      - SPRING_DATASOURCE_PASSWORD=87654321
      - SPRING_PROFILE_ACTIVE=prod
      - SENDGRID_API_KEY=
    depends_on:
      pg:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - backend

  angular-app:
    build:
      context: ./frontend    
      dockerfile: Dockerfile
    ports:
      - "80:4200"
    volumes:
      - ./frontend:/app       
      - /app/node_modules            
    container_name: angular-alacena
    restart: unless-stopped

  pg:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=alacena
      - POSTGRES_PASSWORD=87654321
      - POSTGRES_DB=recetas_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    container_name: postgresql-alacena
    restart: on-failure
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=1
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - backend

networks:
  backend:

volumes:
  pgdata:
  pgadmin-data: